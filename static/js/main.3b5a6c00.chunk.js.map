{"version":3,"sources":["components/logo-and-icons/skill-logo-and-icons.svg","components/globalStyles/mixins.js","components/globalStyles/globalStyles.js","components/navbar/index.jsx","components/home/index.jsx","components/styled-components/index.jsx","components/work/index.jsx","components/contact/index.jsx","components/skills/index.jsx","components/about/index.jsx","components/footer/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","shadow","css","createGlobalStyle","inView","useState","link","text","status","navLinks","setNavLinks","addClass","className","map","nav","key","to","smooth","offset","duration","onClick","event","clickedLink","updatedLinks","forEach","makeActive","target","React","forwardRef","props","ref","id","PageHeading","styled","h2","PageHeadingWithLines","color","Paragraph","p","Button","button","width","InputField","input","TextArea","textarea","media","srcSet","alt","src","sizes","img","process","placeholder","iconsArr","icon","href","sprite","value","obj","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3b5a6c00.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/skill-logo-and-icons.6a30dbdb.svg\";","import { css } from 'styled-components';\r\n\r\nexport const shadow = css`\r\n  box-shadow: 0px 0px 5px 0px rgba(138, 133, 138, 1);\r\n`;\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport { shadow } from './mixins';\r\n\r\nexport default createGlobalStyle`\r\n\r\n\r\n:root {\r\n  /* Background colors */\r\n  --color-primary: #ffa45c;\r\n  --color-secondary: #302822;\r\n\r\n  /* Border Color */\r\n  --border-color-light-grey: #cfcece;\r\n\r\n  /* Default Font */\r\n  --font-primary: \"Montserrat\", sans-serif;\r\n  --font-heading: \"Montserrat\", sans-serif;\r\n}\r\n\r\n /* inherit all the properties from HTML */\r\n*,\r\n*::before,\r\n*::after {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: inherit;\r\n}\r\n\r\nhtml {\r\n  box-sizing: border-box;\r\n  font-size: 62.5%; // (10px/16px) = 62.5% => 1rem = 10px\r\n}\r\n\r\nbody {\r\n  font-family: var(--font-primary);\r\n  color: $color-grey-dark-2;\r\n  font-size: 1.5rem;\r\n  font-weight: 300;\r\n  line-height: 1.6;\r\n}\r\n\r\na,\r\na:link {\r\n  color: currentColor;\r\n  text-decoration: none;\r\n}\r\n  \r\n\r\n\r\n.shadow-box {\r\n   ${shadow}\r\n}\r\n\r\n// ATOMIC CLASSES\r\n.mb-sm {\r\n  margin-bottom: 2rem;\r\n}\r\n.mb-md {\r\n  margin-bottom: 4rem;\r\n}\r\n.mb-lg {\r\n  margin-bottom: 6rem;\r\n}\r\n.mb-xl {\r\n  margin-bottom: 8rem;\r\n}\r\n\r\n\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-scroll';\r\n\r\nimport './index.scss';\r\n\r\nexport default ({ inView }) => {\r\n  let [navLinks, setNavLinks] = useState([\r\n    { link: '#home', text: 'home', status: 'inactive' },\r\n    { link: '#skills', text: 'skills', status: 'inactive' },\r\n    { link: '#work', text: 'work', status: 'inactive' },\r\n    { link: '#about', text: 'about', status: 'inactive' },\r\n    { link: '#contact', text: 'contact', status: 'inactive' },\r\n  ]);\r\n\r\n  const addClass = inView ? 'nav-bar' : 'nav-bar nav-bar-inverse';\r\n\r\n  const makeActive = (clickedLink) => {\r\n    const updatedLinks = [...navLinks];\r\n    updatedLinks.forEach((link) =>\r\n      clickedLink === link.text\r\n        ? (link.status = 'active')\r\n        : (link.status = 'inactive')\r\n    );\r\n    setNavLinks(updatedLinks);\r\n  };\r\n\r\n  return (\r\n    <nav className={addClass}>\r\n      <div className='left-links'>\r\n        <ul>\r\n          {navLinks.map((nav) => (\r\n            <li className={nav.status} key={nav.text}>\r\n              <Link\r\n                to={nav.text}\r\n                smooth={true}\r\n                offset={-70}\r\n                duration={500}\r\n                onClick={(event) => makeActive(event.target.text)}\r\n              >\r\n                {nav.text}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './index.scss';\r\n\r\nexport default React.forwardRef((props, ref) => (\r\n  <section className='home mb-md' ref={ref} id='home'>\r\n    <div className='text-container'>\r\n      <span className='banner-text-1'>Hi,</span>\r\n      <span className='banner-text-2'>I&apos;m Sahil,</span>\r\n      <span className='banner-text-3'>Web Developer,</span>\r\n      <span className='banner-text-4'>\r\n        Front End Web Developer / Lead / JavaScript Expert / C2H (Contract to\r\n        hire)\r\n      </span>\r\n    </div>\r\n  </section>\r\n));\r\n","import styled from \"styled-components\";\r\n\r\nexport const PageHeading = styled.h2`\r\n  font-size: 4rem;\r\n  /* padding: 1rem 0 1rem 2rem; */\r\n  font-family: $font-heading;\r\n  font-weight: 400;\r\n`;\r\nexport const PageHeadingWithLines = styled.h2`\r\n  text-align: center;\r\n  display: grid;\r\n  grid-template-columns: 10% minmax(min-content, max-content) 10%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  grid-column-gap: 1rem;\r\n  font-size: 4rem;\r\n  font-weight: 400;\r\n  color: ${(props) => props.color || \"$color-grey-dark-1\"};\r\n  &:before,\r\n  &:after {\r\n    content: \"\";\r\n    height: 1px;\r\n    display: block;\r\n    background-color: currentColor;\r\n  }\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n  line-height: 1.8;\r\n  margin-bottom: 2rem;\r\n`;\r\nexport const Button = styled.button`\r\n  background-color: #ffa45c;\r\n  color: white;\r\n  padding: 1.3rem;\r\n  border: 0;\r\n  width: ${(props) => props.width || \"100%\"};\r\n`;\r\n\r\nexport const InputField = styled.input`\r\n  border: 1px solid currentColor;\r\n  color: var(--border-color-light-grey);\r\n  height: 4rem;\r\n  width: 100%;\r\n  font-weight: 200;\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  padding: 0.5rem;\r\n`;\r\nexport const TextArea = styled.textarea`\r\n  border: 1px solid currentColor;\r\n  color: var(--border-color-light-grey);\r\n  height: 10rem;\r\n  width: 100%;\r\n  font-weight: 200;\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  padding: 0.5rem;\r\n`;\r\n","import React from 'react';\r\nimport './index.scss';\r\n\r\nimport { PageHeadingWithLines } from '../styled-components';\r\n\r\nexport default () => (\r\n  <section className='work' id='work'>\r\n    <PageHeadingWithLines>Work</PageHeadingWithLines>\r\n\r\n    <div className='projects'>\r\n      {/* Using Art Direction method for responsive images */}\r\n      <picture>\r\n        <source\r\n          media='(max-width:64em)'\r\n          srcSet='/img/project-1-ipad-1x.jpg 1x, /img/project-1-ipad-2x.jpg 2x'\r\n        />\r\n        <img\r\n          srcSet='/img/project-1.jpg 1x, /img/project-1.jpg 2x'\r\n          alt='project-1'\r\n          src='/img/project-1.jpg'\r\n        />\r\n      </picture>\r\n      {/* Using Resolution Switching method for responsive images */}\r\n      <img\r\n        srcSet='/img/project-2.jpg 300w, /img/project-2.jpg 640w'\r\n        sizes='(max-width:25em) 72vw , 280px'\r\n        img='/img/project-1.jpg'\r\n        alt='project-2'\r\n      />\r\n\r\n      {/* <img src=\"/img/project-2.jpg\" alt=\"project-2\" /> */}\r\n      <img\r\n        src={process.env.PUBLIC_URL + '/img/project-3.jpg'}\r\n        alt='project-3'\r\n      />\r\n      <img src='/img/project-4.jpg' alt='project-4' />\r\n      <img src='/img/project-5.jpg' alt='project-5' />\r\n      <img src='/img/project-6.jpg' alt='project-6' />\r\n      <img src='/logo512.png' alt='project-6' />\r\n    </div>\r\n  </section>\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  PageHeadingWithLines,\r\n  InputField,\r\n  TextArea,\r\n  Button,\r\n} from \"../styled-components\";\r\nimport \"./index.scss\";\r\n\r\nexport default () => (\r\n  <section className=\"contact\">\r\n    <PageHeadingWithLines className=\"heading\" color=\"grey\">\r\n      Contact Us\r\n    </PageHeadingWithLines>\r\n    <div className=\"container\">\r\n      <div className=\"form-container\" id=\"contact\">\r\n        <div className=\"left\" />\r\n        <div className=\"right\">\r\n          <form>\r\n            <InputField placeholder=\"Name\" />\r\n            <InputField placeholder=\"Email\" />\r\n            <InputField placeholder=\"Phone\" />\r\n            <TextArea placeholder=\"Message\" />\r\n            <Button>Submit</Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    {/* \r\n    <PageHeadingWithLines className=\"heading\" color=\"white\">\r\n      Contact Us\r\n    </PageHeadingWithLines>\r\n    <div className=\"form-container\" id=\"contact\">\r\n      <div className=\"left\" />\r\n      <div className=\"right\">\r\n        <form>\r\n          <InputField placeholder=\"Name\" />\r\n          <InputField placeholder=\"Email\" />\r\n          <InputField placeholder=\"Phone\" />\r\n          <TextArea placeholder=\"Message\" />\r\n          <Button>Submit</Button>\r\n        </form>\r\n      </div>\r\n    </div> */}\r\n  </section>\r\n);\r\n","import React from 'react';\r\nimport './index.scss';\r\nimport sprite from '../logo-and-icons/skill-logo-and-icons.svg';\r\nimport { PageHeading, Paragraph } from '../styled-components';\r\n\r\nconst iconsArr = [\r\n  'bootstrap',\r\n  'html',\r\n  'redis',\r\n  'docker',\r\n  'css',\r\n  'webpack',\r\n  'javascript',\r\n  'expressjs',\r\n  'mongodb',\r\n  'nodejs',\r\n  'git',\r\n  'circleci',\r\n  'github',\r\n  'jira',\r\n  'react',\r\n  'redux',\r\n  'sass',\r\n  'adobe-xd',\r\n  'redux-saga',\r\n  'eslint',\r\n  'w3c',\r\n];\r\n\r\nexport default () => (\r\n  <section className='skills' id='skills'>\r\n    <div className='skill-description-text'>\r\n      <PageHeading>Skills & Experience</PageHeading>\r\n      <Paragraph>\r\n        Well-organised person, problem solver, independent employee with high\r\n        attention to detail. Fan of MMA, outdoor activities, TV series and,\r\n        recently, English literature. A family person, father of two fractious\r\n        boys, therefore remote employment is preferred.\r\n      </Paragraph>\r\n    </div>\r\n    <div className='skill-logos'>\r\n      {iconsArr.map((icon) => (\r\n        <svg className={icon} key={icon}>\r\n          <use href={`${sprite}#${icon}`} />\r\n        </svg>\r\n      ))}\r\n    </div>\r\n  </section>\r\n);\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport { PageHeading, Paragraph } from \"../styled-components\";\r\nexport default () => (\r\n  <section className=\"about\" id=\"about\">\r\n    <div>\r\n      <PageHeading>About Me</PageHeading>\r\n      <Paragraph>\r\n        Well-organised person, problem solver, independent employee with high\r\n        attention to detail. Fan of MMA, outdoor activities, TV series and,\r\n        recently, English literature. A family person, father of two fractious\r\n        girls, therefore remote employment is preferred.\r\n      </Paragraph>\r\n      <Paragraph>\r\n        I believe in quality work. Deliver small pieces, but must have quality\r\n        work! I Design websites from wireframes to deployement including coding\r\n        frontend / backend and APIs.\r\n      </Paragraph>\r\n\r\n      <Paragraph>\r\n        This portfolio website looks simple, but it has all the modern tech\r\n        <br />\r\n        <br />\r\n        <strong>About this website &#62;</strong>\r\n      </Paragraph>\r\n    </div>\r\n    <div className=\"aboutme-img\" />\r\n  </section>\r\n);\r\n","import React from 'react';\r\nimport './index.scss';\r\nimport sprite from '../logo-and-icons/skill-logo-and-icons.svg';\r\n\r\nexport default () => {\r\n  const icons = [\r\n    {\r\n      icon: 'linkedin',\r\n      value: 'https://www.linkedin.com/in/mohd-sahil-fullstack-developer/',\r\n    },\r\n    { icon: 'paperplane', value: 'sahil242927@gmail.com' },\r\n    { icon: 'phone', value: '+91 9250483367' },\r\n  ];\r\n  return (\r\n    <section className=\"footer\">\r\n      <div>\r\n        Copywrite@2020, Mohd Sahil,\r\n        <div className=\"contact-links\">\r\n          {icons.map((obj) => (\r\n            <div className=\"link-container\" key={obj.icon}>\r\n              <span>\r\n                <svg>\r\n                  <use href={`${sprite}#${obj.icon}`} />\r\n                </svg>\r\n              </span>\r\n              <span>{obj.value}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport GlobalStyles from './components/globalStyles/globalStyles';\r\nimport Navbar from './components/navbar';\r\nimport Home from './components/home';\r\nimport Work from './components/work';\r\nimport Contact from './components/contact';\r\nimport Skills from './components/skills';\r\nimport About from './components/about';\r\nimport Footer from './components/footer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div id='container'>\r\n      <GlobalStyles />\r\n      <Navbar />\r\n      <Home />\r\n      <Work />\r\n      <About />\r\n      <Skills />\r\n      <Contact />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}